define(["./when-54335d57","./Cartesian2-8646c5a1","./arrayRemoveDuplicates-3fea1e5f","./BoundingRectangle-07202124","./Transforms-79117a7b","./ComponentDatatype-1a100acd","./PolylineVolumeGeometryLibrary-4d0ebb44","./Check-24483042","./GeometryAttribute-374f805d","./GeometryAttributes-caa08d6c","./IndexDatatype-82ceea78","./Math-d6182036","./PolygonPipeline-97a7160d","./RuntimeError-88a32665","./WebGLConstants-95ceb4e9","./EllipsoidTangentPlane-325a8e68","./IntersectionTests-5394f658","./Plane-13ae4b1b","./PolylinePipeline-3803a6c2","./EllipsoidGeodesic-cc216670","./EllipsoidRhumbLine-2b7999f3"],function(d,c,r,o,y,h,l,e,g,f,m,t,s,i,n,a,p,u,v,E,P){"use strict";function _(e){var i=(e=d.defaultValue(e,d.defaultValue.EMPTY_OBJECT)).polylinePositions,n=e.shapePositions;this._positions=i,this._shape=n,this._ellipsoid=c.Ellipsoid.clone(d.defaultValue(e.ellipsoid,c.Ellipsoid.WGS84)),this._cornerType=d.defaultValue(e.cornerType,l.CornerType.ROUNDED),this._granularity=d.defaultValue(e.granularity,t.CesiumMath.RADIANS_PER_DEGREE),this._workerName="createPolylineVolumeOutlineGeometry";var a=1+i.length*c.Cartesian3.packedLength;a+=1+n.length*c.Cartesian2.packedLength,this.packedLength=a+c.Ellipsoid.packedLength+2}_.pack=function(e,i,n){var a;n=d.defaultValue(n,0);var t=e._positions,r=t.length;for(i[n++]=r,a=0;a<r;++a,n+=c.Cartesian3.packedLength)c.Cartesian3.pack(t[a],i,n);var o=e._shape,r=o.length;for(i[n++]=r,a=0;a<r;++a,n+=c.Cartesian2.packedLength)c.Cartesian2.pack(o[a],i,n);return c.Ellipsoid.pack(e._ellipsoid,i,n),n+=c.Ellipsoid.packedLength,i[n++]=e._cornerType,i[n]=e._granularity,i};var k=c.Ellipsoid.clone(c.Ellipsoid.UNIT_SPHERE),C={polylinePositions:void 0,shapePositions:void 0,ellipsoid:k,height:void 0,cornerType:void 0,granularity:void 0};_.unpack=function(e,i,n){i=d.defaultValue(i,0);for(var a=e[i++],t=new Array(a),r=0;r<a;++r,i+=c.Cartesian3.packedLength)t[r]=c.Cartesian3.unpack(e,i);a=e[i++];var o=new Array(a);for(r=0;r<a;++r,i+=c.Cartesian2.packedLength)o[r]=c.Cartesian2.unpack(e,i);var l=c.Ellipsoid.unpack(e,i,k);i+=c.Ellipsoid.packedLength;var s=e[i++],p=e[i];return d.defined(n)?(n._positions=t,n._shape=o,n._ellipsoid=c.Ellipsoid.clone(l,n._ellipsoid),n._cornerType=s,n._granularity=p,n):(C.polylinePositions=t,C.shapePositions=o,C.cornerType=s,C.granularity=p,new _(C))};var b=new o.BoundingRectangle;return _.createGeometry=function(e){var i=e._positions,n=r.arrayRemoveDuplicates(i,c.Cartesian3.equalsEpsilon),a=e._shape,a=l.PolylineVolumeGeometryLibrary.removeDuplicatesFromShape(a);if(!(n.length<2||a.length<3)){s.PolygonPipeline.computeWindingOrder2D(a)===s.WindingOrder.CLOCKWISE&&a.reverse();var t=o.BoundingRectangle.fromPoints(a,b);return function(e,i){var n=new f.GeometryAttributes;n.position=new g.GeometryAttribute({componentDatatype:h.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:e});var a=i.length,t=n.position.values.length/3,r=e.length/3/a,o=m.IndexDatatype.createTypedArray(t,2*a*(1+r)),l=0,s=0,p=s*a;for(u=0;u<a-1;u++)o[l++]=u+p,o[l++]=u+p+1;for(o[l++]=a-1+p,o[l++]=p,p=(s=r-1)*a,u=0;u<a-1;u++)o[l++]=u+p,o[l++]=u+p+1;for(o[l++]=a-1+p,o[l++]=p,s=0;s<r-1;s++)for(var d=a*s,c=d+a,u=0;u<a;u++)o[l++]=u+d,o[l++]=u+c;return new g.Geometry({attributes:n,indices:m.IndexDatatype.createTypedArray(t,o),boundingSphere:y.BoundingSphere.fromVertices(e),primitiveType:g.PrimitiveType.LINES})}(l.PolylineVolumeGeometryLibrary.computePositions(n,a,t,e,!1),a)}},function(e,i){return d.defined(i)&&(e=_.unpack(e,i)),e._ellipsoid=c.Ellipsoid.clone(e._ellipsoid),_.createGeometry(e)}});
