define(["./arrayRemoveDuplicates-3fea1e5f","./Transforms-79117a7b","./Cartesian2-8646c5a1","./Check-24483042","./ComponentDatatype-1a100acd","./CoplanarPolygonGeometryLibrary-32520d7a","./when-54335d57","./GeometryAttribute-374f805d","./GeometryAttributes-caa08d6c","./GeometryInstance-6aa9010a","./GeometryPipeline-571ff4c9","./IndexDatatype-82ceea78","./PolygonGeometryLibrary-2a7648d9","./Math-d6182036","./RuntimeError-88a32665","./WebGLConstants-95ceb4e9","./OrientedBoundingBox-eb360dc3","./EllipsoidTangentPlane-325a8e68","./IntersectionTests-5394f658","./Plane-13ae4b1b","./AttributeCompression-10c27d9c","./EncodedCartesian3-bf827957","./ArcType-2b58731c","./EllipsoidRhumbLine-2b7999f3","./PolygonPipeline-97a7160d"],function(c,p,s,e,u,d,o,m,g,f,h,b,P,t,r,n,a,i,y,l,G,v,L,C,T){"use strict";function E(e){for(var t=e.length,r=new Float64Array(3*t),n=b.IndexDatatype.createTypedArray(t,2*t),a=0,o=0,i=0;i<t;i++){var y=e[i];r[a++]=y.x,r[a++]=y.y,r[a++]=y.z,n[o++]=i,n[o++]=(i+1)%t}var l=new g.GeometryAttributes({position:new m.GeometryAttribute({componentDatatype:u.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:r})});return new m.Geometry({attributes:l,indices:n,primitiveType:m.PrimitiveType.LINES})}function k(e){var t=(e=o.defaultValue(e,o.defaultValue.EMPTY_OBJECT)).polygonHierarchy;this._polygonHierarchy=t,this._workerName="createCoplanarPolygonOutlineGeometry",this.packedLength=P.PolygonGeometryLibrary.computeHierarchyPackedLength(t)+1}k.fromPositions=function(e){return new k({polygonHierarchy:{positions:(e=o.defaultValue(e,o.defaultValue.EMPTY_OBJECT)).positions}})},k.pack=function(e,t,r){return r=o.defaultValue(r,0),t[r=P.PolygonGeometryLibrary.packPolygonHierarchy(e._polygonHierarchy,t,r)]=e.packedLength,t};var H={polygonHierarchy:{}};return k.unpack=function(e,t,r){t=o.defaultValue(t,0);var n=P.PolygonGeometryLibrary.unpackPolygonHierarchy(e,t);t=n.startingIndex,delete n.startingIndex;var a=e[t];return o.defined(r)||(r=new k(H)),r._polygonHierarchy=n,r.packedLength=a,r},k.createGeometry=function(e){var t=e._polygonHierarchy,r=t.positions;if(!((r=c.arrayRemoveDuplicates(r,s.Cartesian3.equalsEpsilon,!0)).length<3)&&d.CoplanarPolygonGeometryLibrary.validOutline(r)){var n=P.PolygonGeometryLibrary.polygonOutlinesFromHierarchy(t,!1);if(0!==n.length){for(var a=[],o=0;o<n.length;o++){var i=new f.GeometryInstance({geometry:E(n[o])});a.push(i)}var y=h.GeometryPipeline.combineInstances(a)[0],l=p.BoundingSphere.fromPoints(t.positions);return new m.Geometry({attributes:y.attributes,indices:y.indices,primitiveType:y.primitiveType,boundingSphere:l})}}},function(e,t){return o.defined(t)&&(e=k.unpack(e,t)),e._ellipsoid=s.Ellipsoid.clone(e._ellipsoid),k.createGeometry(e)}});
