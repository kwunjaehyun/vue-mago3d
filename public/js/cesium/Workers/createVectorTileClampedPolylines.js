define(["./AttributeCompression-10c27d9c","./Cartesian2-8646c5a1","./IndexDatatype-82ceea78","./Math-d6182036","./createTaskProcessorWorker","./Check-24483042","./when-54335d57","./WebGLConstants-95ceb4e9"],function(q,z,L,_,a,e,t,r){"use strict";var G=32767,o=Math.cos(_.CesiumMath.toRadians(150)),Z=new z.Cartographic,Y=new z.Cartesian3;var j=new z.Cartographic,J=new z.Cartographic;function K(a){var e=8*a,t=3*e,r=4*e;this.startEllipsoidNormals=new Float32Array(t),this.endEllipsoidNormals=new Float32Array(t),this.startPositionAndHeights=new Float32Array(r),this.startFaceNormalAndVertexCornerIds=new Float32Array(r),this.endPositionAndHeights=new Float32Array(r),this.endFaceNormalAndHalfWidths=new Float32Array(r),this.vertexBatchIds=new Uint16Array(e),this.indices=L.IndexDatatype.createTypedArray(e,36*a),this.vec3Offset=0,this.vec4Offset=0,this.batchIdOffset=0,this.indexOffset=0,this.volumeStartIndex=0}var d=new z.Cartesian3,l=new z.Cartesian3;function H(a,e,t,r,s){var n=z.Cartesian3.subtract(t,e,l),i=z.Cartesian3.subtract(e,a,d);return z.Cartesian3.normalize(n,n),z.Cartesian3.normalize(i,i),z.Cartesian3.dot(n,i)<o&&(i=z.Cartesian3.multiplyByScalar(i,-1,d)),z.Cartesian3.add(n,i,s),z.Cartesian3.equals(s,z.Cartesian3.ZERO)&&(s=z.Cartesian3.subtract(a,e)),z.Cartesian3.cross(s,r,s),z.Cartesian3.cross(r,s,s),z.Cartesian3.normalize(s,s),s}var O=[0,2,6,0,6,4,0,1,3,0,3,2,0,4,5,0,5,1,5,3,1,5,7,3,7,5,4,7,4,6,7,6,2,7,2,3],P=O.length,S=new z.Cartesian3,D=new z.Cartesian3,M=new z.Cartesian3,B=new z.Cartesian3,R=new z.Cartesian3;K.prototype.addVolume=function(a,e,t,r,s,n,i,o,d,l){for(var c=z.Cartesian3.add(e,d,S),h=l.geodeticSurfaceNormal(c,D),c=z.Cartesian3.add(t,d,S),f=l.geodeticSurfaceNormal(c,B),u=H(a,e,t,h,M),C=H(r,t,e,f,R),p=this.startEllipsoidNormals,m=this.endEllipsoidNormals,v=this.startPositionAndHeights,A=this.startFaceNormalAndVertexCornerIds,w=this.endPositionAndHeights,b=this.endFaceNormalAndHalfWidths,g=this.vertexBatchIds,N=this.batchIdOffset,y=this.vec3Offset,k=this.vec4Offset,I=0;I<8;I++)z.Cartesian3.pack(h,p,y),z.Cartesian3.pack(f,m,y),z.Cartesian3.pack(e,v,k),v[k+3]=s,z.Cartesian3.pack(t,w,k),w[k+3]=n,z.Cartesian3.pack(u,A,k),A[k+3]=I,z.Cartesian3.pack(C,b,k),b[k+3]=i,g[N++]=o,y+=3,k+=4;this.batchIdOffset=N,this.vec3Offset=y,this.vec4Offset=k;var x=this.indices,E=this.volumeStartIndex,F=this.indexOffset;for(I=0;I<P;I++)x[F+I]=O[I]+E;this.volumeStartIndex+=8,this.indexOffset+=P};var Q=new z.Rectangle,X=new z.Ellipsoid,$=new z.Cartesian3,aa=new z.Cartesian3,ea=new z.Cartesian3,ta=new z.Cartesian3,ra=new z.Cartesian3;return a(function(a,e){var t=new Uint16Array(a.positions),r=new Uint16Array(a.widths),s=new Uint32Array(a.counts),n=new Uint16Array(a.batchIds),i=Q,o=X,d=$,l=new Float64Array(a.packedBuffer),c=0,h=l[c++],f=l[c++];z.Rectangle.unpack(l,c,i),c+=z.Rectangle.packedLength,z.Ellipsoid.unpack(l,c,o),c+=z.Ellipsoid.packedLength,z.Cartesian3.unpack(l,c,d);var u=t.length/3,C=t.subarray(0,u),p=t.subarray(u,2*u),m=t.subarray(2*u,3*u);q.AttributeCompression.zigZagDeltaDecode(C,p,m),function(a,e,t,r){for(var s=r.length,n=a.length,i=new Uint8Array(n),o=j,d=J,l=0,c=0;c<s;c++){for(var h=r[c],f=h,u=1;u<h;u++){var C=l+u,p=C-1;d.longitude=a[C],d.latitude=e[C],o.longitude=a[p],o.latitude=e[p],z.Cartographic.equals(d,o)&&(f--,i[p]=1)}r[c]=f,l+=h}for(var m=0,v=0;v<n;v++)1!==i[v]&&(a[m]=a[v],e[m]=e[v],t[m]=t[v],m++)}(C,p,m,s);for(var v=s.length,A=0,w=0;w<v;w++){A+=s[w]-1}var b=new K(A),g=function(a,e,t,r,s,n,i,o){for(var d=a.length,l=new Float32Array(3*d),c=0;c<d;++c){var h=a[c],f=e[c],u=t[c],C=_.CesiumMath.lerp(r.west,r.east,h/G),p=_.CesiumMath.lerp(r.south,r.north,f/G),m=_.CesiumMath.lerp(s,n,u/G),v=z.Cartographic.fromRadians(C,p,m,Z),A=i.cartographicToCartesian(v,Y),w=z.Cartesian3.subtract(A,o,Y);z.Cartesian3.pack(w,l,3*c)}return l}(C,p,m,i,h,f,o,d),N=0,y=0;for(w=0;w<v;w++){for(var k=s[w]-1,I=.5*r[w],x=n[w],E=N,F=0;F<k;F++){var H=z.Cartesian3.unpack(g,N,ea),O=z.Cartesian3.unpack(g,N+3,ta),P=m[y],S=m[y+1],P=_.CesiumMath.lerp(h,f,P/G),S=_.CesiumMath.lerp(h,f,S/G);y++;var D,M,B,R,U,T=aa,V=ra;0===F?(D=E+3*k,M=z.Cartesian3.unpack(g,D,aa),z.Cartesian3.equals(M,H)?z.Cartesian3.unpack(g,D-3,T):(B=z.Cartesian3.subtract(H,O,aa),T=z.Cartesian3.add(B,H,aa))):z.Cartesian3.unpack(g,N-3,T),F===k-1?(R=z.Cartesian3.unpack(g,E,ra),z.Cartesian3.equals(R,O)?z.Cartesian3.unpack(g,E+3,V):(U=z.Cartesian3.subtract(O,H,ra),V=z.Cartesian3.add(U,O,ra))):z.Cartesian3.unpack(g,N+6,V),b.addVolume(T,H,O,V,P,S,I,x,d,o),N+=3}N+=3,y++}var W=b.indices;return e.push(b.startEllipsoidNormals.buffer),e.push(b.endEllipsoidNormals.buffer),e.push(b.startPositionAndHeights.buffer),e.push(b.startFaceNormalAndVertexCornerIds.buffer),e.push(b.endPositionAndHeights.buffer),e.push(b.endFaceNormalAndHalfWidths.buffer),e.push(b.vertexBatchIds.buffer),e.push(W.buffer),{indexDatatype:2===W.BYTES_PER_ELEMENT?L.IndexDatatype.UNSIGNED_SHORT:L.IndexDatatype.UNSIGNED_INT,startEllipsoidNormals:b.startEllipsoidNormals.buffer,endEllipsoidNormals:b.endEllipsoidNormals.buffer,startPositionAndHeights:b.startPositionAndHeights.buffer,startFaceNormalAndVertexCornerIds:b.startFaceNormalAndVertexCornerIds.buffer,endPositionAndHeights:b.endPositionAndHeights.buffer,endFaceNormalAndHalfWidths:b.endFaceNormalAndHalfWidths.buffer,vertexBatchIds:b.vertexBatchIds.buffer,indices:W.buffer}})});
